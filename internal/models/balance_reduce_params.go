// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BalanceReduceParams Списание с баланса
//
// swagger:model BalanceReduceParams
type BalanceReduceParams struct {

	// amount
	// Required: true
	// Minimum: 0.01
	Amount float64 `json:"amount"`

	// Описания операции
	// Example: Заказ №123
	// Required: true
	OperationRef string `json:"operation_ref"`

	// user guid
	// Required: true
	// Format: uuid
	UserGUID strfmt.UUID `json:"user_guid"`
}

// Validate validates this balance reduce params
func (m *BalanceReduceParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperationRef(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserGUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BalanceReduceParams) validateAmount(formats strfmt.Registry) error {

	if err := validate.Required("amount", "body", float64(m.Amount)); err != nil {
		return err
	}

	if err := validate.Minimum("amount", "body", m.Amount, 0.01, false); err != nil {
		return err
	}

	return nil
}

func (m *BalanceReduceParams) validateOperationRef(formats strfmt.Registry) error {

	if err := validate.RequiredString("operation_ref", "body", m.OperationRef); err != nil {
		return err
	}

	return nil
}

func (m *BalanceReduceParams) validateUserGUID(formats strfmt.Registry) error {

	if err := validate.Required("user_guid", "body", strfmt.UUID(m.UserGUID)); err != nil {
		return err
	}

	if err := validate.FormatOf("user_guid", "body", "uuid", m.UserGUID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this balance reduce params based on context it is used
func (m *BalanceReduceParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BalanceReduceParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BalanceReduceParams) UnmarshalBinary(b []byte) error {
	var res BalanceReduceParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
