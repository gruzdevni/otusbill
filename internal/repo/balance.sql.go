// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: balance.sql

package query

import (
	"context"

	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const changeBalance = `-- name: ChangeBalance :exec
INSERT INTO balance_register (user_guid, operation_ref, amount, created_at ) VALUES ($1, $2, $3, now())
`

type ChangeBalanceParams struct {
	UserGuid     uuid.UUID
	OperationRef string
	Amount       decimal.Decimal
}

func (q *Queries) ChangeBalance(ctx context.Context, arg ChangeBalanceParams) error {
	_, err := q.exec(ctx, q.changeBalanceStmt, changeBalance, arg.UserGuid, arg.OperationRef, arg.Amount)
	return err
}

const getUserBalance = `-- name: GetUserBalance :one
SELECT user_guid, SUM(amount)::FLOAT FROM balance_register WHERE user_guid = $1 GROUP BY user_guid
`

type GetUserBalanceRow struct {
	UserGuid uuid.UUID
	Column2  float64
}

func (q *Queries) GetUserBalance(ctx context.Context, userGuid uuid.UUID) (GetUserBalanceRow, error) {
	row := q.queryRow(ctx, q.getUserBalanceStmt, getUserBalance, userGuid)
	var i GetUserBalanceRow
	err := row.Scan(&i.UserGuid, &i.Column2)
	return i, err
}
